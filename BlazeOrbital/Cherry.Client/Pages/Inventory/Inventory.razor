@page "/"
@page "/search/{SearchName}"
@using System.Linq

<PageTitle>Inventory</PageTitle>
<SyncStatus />
@*<PartDetails Part="selectedPart" OnHide="@(() => { selectedPart = null; })" />*@

@if (db is not null)
{
    <div class="search-container">
        <input class="search-input" @bind="SearchName" @bind:event="oninput" type="search" placeholder="Search..." />
        <button @onclick="ToggleMode" type="button" class="mode-button">
            <svg class="mode-svg h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
            </svg>
        </button>
    </div>

    <div class="inventory-grid @(blocked ? "blocky": "")">
        <Grid Virtualize="true" ResizableColumns="@(!blocked)" TGridItem="Product" OnItemClick="@OnItemClick" Items="@GetFilteredParts()" ItemKey="@(x => x.Id)" ItemSize="210">

            <TemplateColumn Class="col-image">
                <ChildContent>
                    <div>
                        <a href="@context.Url">
                            <center>
                                <img src="@(context.Thumbnail)" />
                            </center>
                        </a>
                    </div>
                </ChildContent>
            </TemplateColumn>


            <TemplateColumn Title="Category" SortBy="@(items => items.SortByAscending(x => x.Category).ThenAscending(x => x.Subcategory))" Class="col-category">
                <ChildContent>@context.Subcategory</ChildContent>
                <ColumnOptions>
                    <p>Category (@categories.Length)</p>
                    <select multiple class="w-full bg-gray-100 border-grey-500 border my-4" @bind="categories" @onclick="@(() => subcategories = Array.Empty<string>())">
                        @foreach (var name in db.Products.Select(x => x.Category).Distinct())
                        {
                        <option>@name</option>
                        }
                </select>

                <p>Subcategory (@subcategories.Length)</p>
                <select multiple class="w-full bg-gray-100 border-grey-500 border my-4" @bind="subcategories">
                    @foreach (var name in db.Products.Where(x => categories.Contains(x.Category)).Select(x => x.Subcategory).Distinct())
                        {
                        <option>@name</option>
                        }
                </select>

                <div><button class="bg-gray-200 px-5 py-1 mb-2" @onclick="@(() => { categories = Array.Empty<string>(); subcategories = Array.Empty<string>(); })">Reset</button></div>
            </ColumnOptions>
        </TemplateColumn>

        <PropertyColumn Title="Name" Property="@(x => x.Name)" Class="col-name">
            <ColumnOptions>
                <input class="search-input" @bind="SearchName" @bind:event="oninput" type="search" placeholder="Search..." />
            </ColumnOptions>
        </PropertyColumn>

        <PropertyColumn Title="Shop" Property="@(x => x.Shop)" Class="col-location" />

        <PropertyColumn Title="Price" Property="@(x => x.SalePrice)" Align="Align.Right" Class="col-stock">
            <ColumnOptions>
                <p>Min stock</p>
                <input type="range" @bind="minStock" @bind:event="oninput" min="0" max="50000" />
                <p>Max stock</p>
                <input type="range" @bind="maxStock" @bind:event="oninput" min="0" max="50000" />
            </ColumnOptions>
        </PropertyColumn>

        @*<PropertyColumn Title="Cost (€)" Property="@(x => x.SalePrice)" Format="N0" Align="Align.Right" Class="col-cost" />*@

    </Grid>
    <div class="status-bar">
        Showing @GetFilteredParts()?.Count().ToString("N0") items
    </div>
</div>
}

